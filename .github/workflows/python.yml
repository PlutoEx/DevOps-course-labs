name: CI

on:
  push:
    paths:
      - app_python/**
      - .github/workflows/python.yml

jobs:
  build:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./app_python

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        sparse-checkout: app_python

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.x

#    - name: Enter python project
#      run: cd app_python

#    - name: Run environment
#      run: |
#        python -m venv .venv
#        .venv/Scripts/Activate
#        flask run

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Lint code
      run: flake8

    - name: Run tests
      run: pytest tests.py

  docker:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: app_python
          file: ./app_python/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/app_python:latest

    security:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
          with:
            sparse-checkout: app_python
        - name: Run Synk to check for vulnerabilities
          uses: snyk/actions/python@master
          continue-on-error: true # To make sure that SARIF upload gets called
          env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          with:
            args: --sarif-file-output=snyk.sarif